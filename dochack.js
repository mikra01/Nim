/* Generated by the Nim Compiler v0.19.1 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI145048 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4062 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI147805 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI147820 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147777 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI28057 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147018 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4050 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI147465 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147429 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147155 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147588 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI147571 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI146890 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI146836 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI4058 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37420 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI146793 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI146729 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI15744 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI4118 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI4112 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI4026 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4028 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI4046 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI146694 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI146167 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI26204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI26452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI26248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26499 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26542 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI26254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26252 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI130 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI4008 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI26230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI26228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI146165 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI146164 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI147554 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NNI26216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI26216.node = NNI26216;
var NNI4008 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4008.node = NNI4008;
NTI26216.base = NTI4008;
NTI26214.base = NTI26216;
NTI26542.base = NTI26228;
var NNI26254 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI140, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI140, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI140, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI140, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI26542, name: "elements", sons: null}]};
NTI26254.node = NNI26254;
NTI26254.base = NTI26230;
NTI26252.base = NTI26254;
var NNI26248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI130, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI130, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI104, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI140, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI140, name: "value", sons: null}]};
NTI26248.node = NNI26248;
NTI26248.base = NTI26230;
NTI26246.base = NTI26248;
NTI26499.base = NTI26246;
var NNI26230 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI26214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI130, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI130, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI140, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI130, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI26252, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI130, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI26499, name: "options", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI104, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI104, name: "clientHeight", sons: null}]};
NTI26230.node = NNI26230;
NTI26220.base = NTI26222;
NTI26448.base = NTI26220;
NTI26450.base = NTI26220;
NTI26452.base = NTI26220;
var NNI26218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI26218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI26218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI26218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI26218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI26218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI26218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI26218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI26218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI26218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI26218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI26218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI26218, name: "NotationNode", len: 0, sons: null}}};
NTI26218.node = NNI26218;
var NNI26262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI140, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI140, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI140, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI140, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI140, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI140, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI140, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI140, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI140, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI140, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI140, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI140, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI140, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI140, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI140, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI140, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI140, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI140, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI140, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI140, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI140, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI140, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI140, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI140, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI140, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI140, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI140, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI140, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI140, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI140, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI140, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI140, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI140, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI140, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI140, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI140, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI140, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI140, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI140, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI140, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI140, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI140, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI140, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI140, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI140, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI140, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI140, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI140, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI140, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI140, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI140, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI140, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI140, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI140, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI140, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI140, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI140, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI140, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI140, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI140, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI140, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI140, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI140, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI140, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI140, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI140, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI140, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI140, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI140, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI140, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI140, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI140, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI140, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI140, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI140, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI140, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI140, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI140, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI140, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI140, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI140, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI140, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI140, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI140, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI140, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI140, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI140, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI140, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI140, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI140, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI104, name: "zIndex", sons: null}]};
NTI26262.node = NNI26262;
NTI26262.base = NTI4008;
NTI26260.base = NTI26262;
var NNI26222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI26448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI26450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI26452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI140, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI26220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI26220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI26220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI140, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI26218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI140, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI26220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI26220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI140, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI26260, name: "style", sons: null}]};
NTI26222.node = NNI26222;
var NNI26204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI26319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI26323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI26327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI26331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI26335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI26339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI26343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI26347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI26351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI26355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI26359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI26363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI26367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI26371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI26375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI26379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI26383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI26387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI26391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI26395, name: "onunload", sons: null}]};
NTI26204.node = NNI26204;
NTI26204.base = NTI4008;
NTI26222.base = NTI26204;
NTI26230.base = NTI26222;
NTI26228.base = NTI26230;
NTI146167.base = NTI146164;
var NNI146165 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "heading", len: 0, typ: NTI26228, name: "heading", sons: null}, 
{kind: 1, offset: "kids", len: 0, typ: NTI146167, name: "kids", sons: null}, 
{kind: 1, offset: "sortId", len: 0, typ: NTI104, name: "sortId", sons: null}, 
{kind: 1, offset: "doSort", len: 0, typ: NTI130, name: "doSort", sons: null}]};
NTI146165.node = NNI146165;
NTI146164.base = NTI146165;
NTI147554.base = NTI146164;
NTI146694.base = NTI146164;
var NNI4046 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4046.node = NNI4046;
var NNI4042 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4042.node = NNI4042;
var NNI4028 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4028.node = NNI4028;
NTI4112.base = NTI4026;
NTI4118.base = NTI4026;
var NNI4026 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI4112, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raise_id", len: 0, typ: NTI114, name: "raise_id", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI4118, name: "up", sons: null}]};
NTI4026.node = NNI4026;
NTI4026.base = NTI4008;
NTI4028.base = NTI4026;
NTI4042.base = NTI4028;
NTI4046.base = NTI4042;
var NNI15744 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI15744.node = NNI15744;
NTI146729.base = NTI146164;
NTI146793.base = NTI104;
var NNI4058 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4058.node = NNI4058;
NTI4058.base = NTI4028;
NTI146836.base = NTI146164;
NTI146890.base = NTI146164;
NTI147571.base = NTI26228;
NTI147588.base = NTI26228;
NTI147155.base = NTI146164;
NTI147429.base = NTI146164;
NTI147465.base = NTI146164;
var NNI4050 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4050.node = NNI4050;
NTI4050.base = NTI4028;
NTI147018.base = NTI146164;
NTI28057.base = NTI26228;
NTI147777.base = NTI140;
var NNI147805 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI26228, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI147805.node = NNI147805;
NTI147820.base = NTI147805;
var NNI4062 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI4062.node = NNI4062;
NTI4062.base = NTI4028;
var NNI145048 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI104, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI130, name: "Field1", sons: null}]};
NTI145048.node = NNI145048;

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_17630, src_17631, ti_17632) {
	var result_18043 = null;

		switch (ti_17632.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_17601(ti_17632))) {
			result_18043 = src_17631;
			}
			else {
				result_18043 = [src_17631[0], src_17631[1]];
			}
			
			break;
		case 19:
			      if (dest_17630 === null || dest_17630 === undefined) {
        dest_17630 = {};
      }
      else {
        for (var key in dest_17630) { delete dest_17630[key]; }
      }
      for (var key in src_17631) { dest_17630[key] = src_17631[key]; }
      result_18043 = dest_17630;
    
			break;
		case 18:
		case 17:
			if (!((ti_17632.base == null))) {
			result_18043 = nimCopy(dest_17630, src_17631, ti_17632.base);
			}
			else {
			if ((ti_17632.kind == 17)) {
			result_18043 = (dest_17630 === null || dest_17630 === undefined) ? {m_type: ti_17632} : dest_17630;
			}
			else {
				result_18043 = (dest_17630 === null || dest_17630 === undefined) ? {} : dest_17630;
			}
			}
			nimCopyAux(result_18043, src_17631, ti_17632.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_17631 === null) {
        result_18043 = null;
      }
      else {
        if (dest_17630 === null || dest_17630 === undefined) {
          dest_17630 = new Array(src_17631.length);
        }
        else {
          dest_17630.length = src_17631.length;
        }
        result_18043 = dest_17630;
        for (var i = 0; i < src_17631.length; ++i) {
          result_18043[i] = nimCopy(result_18043[i], src_17631[i], ti_17632.base);
        }
      }
    
			break;
		case 28:
			      if (src_17631 !== null) {
        result_18043 = src_17631.slice(0);
      }
    
			break;
		default: 
			result_18043 = src_17631;
			break;
		}

	return result_18043;

}

function makeNimstrLit(c_16624) {
		  var ln = c_16624.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_16624.charCodeAt(i);
  }
  return result;
  

	
}

function arrayConstr(len_18104, value_18105, typ_18106) {
		    var result = new Array(len_18104);
    for (var i = 0; i < len_18104; ++i) result[i] = nimCopy(null, value_18105, typ_18106);
    return result;
  

	
}

function cstrToNimstr(c_16641) {
		  var ln = c_16641.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_16641.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_16641.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_16658) {
		  var len = s_16658.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_16658[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_16658[i] < 128)
      asciiPart[i] = fcc(s_16658[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_16218, ename_16219) {
		e_16218.name = ename_16219;
		if ((excHandler == 0)) {
		unhandledException(e_16218);
		}
		
		e_16218.trace = nimCopy(null, raw_write_stack_trace_16041(), NTI138);
		throw e_16218;

	
}

function addInt(a_17003, b_17004) {
		    var result = a_17003 + b_17004;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_18123, a_18124, b_18125) {
			var Tmp1;

	var result_18126 = 0;

	BeforeRet: do {
			if (!(a_18124 <= i_18123)) Tmp1 = false; else {				Tmp1 = (i_18123 <= b_18125);			}		if (Tmp1) {
		result_18126 = i_18123;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_18126;

}

function subInt(a_17021, b_17022) {
		    var result = a_17021 - b_17022;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_18142, a_18143, b_18144) {
			var Tmp1;

	var result_18145 = 0;

	BeforeRet: do {
			if (!(a_18143 <= i_18142)) Tmp1 = false; else {				Tmp1 = (i_18142 <= b_18144);			}		if (Tmp1) {
		result_18145 = i_18142;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_18145;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_17039, b_17040) {
		    var result = a_17039 * b_17040;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_17358, b_17359) {
		var Tmp1;

	var result_17360 = 0;

	BeforeRet: do {
		if ((b_17359 <= a_17358)) {
		Tmp1 = a_17358;
		}
		else {
		Tmp1 = b_17359;
		}
		
		result_17360 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_17360;

}

function nimMin(a_17340, b_17341) {
		var Tmp1;

	var result_17342 = 0;

	BeforeRet: do {
		if ((a_17340 <= b_17341)) {
		Tmp1 = a_17340;
		}
		else {
		Tmp1 = b_17341;
		}
		
		result_17342 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_17342;

}
var nimvm_7578 = false;
var nim_program_result = 0;
var global_raise_hook_13818 = [null];
var local_raise_hook_13823 = [null];
var out_of_mem_hook_13826 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var dorender_28091 = [null];
var draw_timeout_28092 = [null];
var current_tree_28093 = [null];
var link_counter_28542 = [0];
var radio_counter_29028 = [0];
var alternative_147499 = [null];

function is_fat_pointer_17601(ti_17603) {
	var result_17604 = false;

	BeforeRet: do {
		result_17604 = !((ConstSet1[ti_17603.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_17604;

}

function nimCopyAux(dest_17635, src_17636, n_17638) {
		switch (n_17638.kind) {
		case 0:
			break;
		case 1:
			      dest_17635[n_17638.offset] = nimCopy(dest_17635[n_17638.offset], src_17636[n_17638.offset], n_17638.typ);
    
			break;
		case 2:
			L1: do {
				var i_18024 = 0;
				var colontmp__147620 = 0;
				colontmp__147620 = (n_17638.len - 1);
				var res_147623 = 0;
				L2: do {
						L3: while (true) {
						if (!(res_147623 <= colontmp__147620)) break L3;
							i_18024 = res_147623;
							nimCopyAux(dest_17635, src_17636, n_17638.sons[i_18024]);
							res_147623 += 1;
						}
				} while(false);
			} while(false);
			break;
		case 3:
			      dest_17635[n_17638.offset] = nimCopy(dest_17635[n_17638.offset], src_17636[n_17638.offset], n_17638.typ);
      for (var i = 0; i < n_17638.sons.length; ++i) {
        nimCopyAux(dest_17635, src_17636, n_17638.sons[i][1]);
      }
    
			break;
		}

	
}

function add_13838(x_13841, x_13841_Idx, y_13842) {
		      if (x_13841[x_13841_Idx] === null) { x_13841[x_13841_Idx] = []; }
      var off = x_13841[x_13841_Idx].length;
      x_13841[x_13841_Idx].length += y_13842.length;
      for (var i = 0; i < y_13842.length; ++i) {
        x_13841[x_13841_Idx][off+i] = y_13842.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_15739(f_15741) {
					var Tmp3;

	var result_15742 = [null];

		var it_15750 = f_15741;
		var i_15752 = 0;
		var total_15754 = 0;
		var temp_frames_15761 = arrayConstr(64, {Field0: null, Field1: 0}, NTI15744);
		L1: do {
				L2: while (true) {
					if (!!((it_15750 == null))) Tmp3 = false; else {						Tmp3 = (i_15752 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_15761[i_15752].Field0 = it_15750.procname;
					temp_frames_15761[i_15752].Field1 = it_15750.line;
					i_15752 += 1;
					total_15754 += 1;
					it_15750 = it_15750.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_15750 == null))) break L5;
					total_15754 += 1;
					it_15750 = it_15750.prev;
				}
		} while(false);
		result_15742[0] = nimCopy(null, [], NTI138);
		if (!((total_15754 == i_15752))) {
		if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(makeNimstrLit("(")); } else { result_15742[0] = makeNimstrLit("("); };
		if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(cstrToNimstr(((total_15754 - i_15752))+"")); } else { result_15742[0] = cstrToNimstr(((total_15754 - i_15752))+"").slice(); };
		if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_15742[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_16024 = 0;
			var colontmp__147660 = 0;
			colontmp__147660 = (i_15752 - 1);
			var res_147667 = colontmp__147660;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_147667)) break L8;
						j_16024 = res_147667;
						add_13838(result_15742, 0, temp_frames_15761[j_16024].Field0);
						if ((0 < temp_frames_15761[j_16024].Field1)) {
						if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(makeNimstrLit(", line: ")); } else { result_15742[0] = makeNimstrLit(", line: "); };
						if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(cstrToNimstr((temp_frames_15761[j_16024].Field1)+"")); } else { result_15742[0] = cstrToNimstr((temp_frames_15761[j_16024].Field1)+"").slice(); };
						}
						
						if (result_15742[0] != null) { result_15742[0] = (result_15742[0]).concat(makeNimstrLit("\x0A")); } else { result_15742[0] = makeNimstrLit("\x0A"); };
						res_147667 -= 1;
					}
			} while(false);
		} while(false);

	return result_15742[0];

}

function raw_write_stack_trace_16041() {
	var result_16043 = null;

		if (!((framePtr == null))) {
		result_16043 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A")).concat(aux_write_stack_trace_15739(framePtr)), NTI138);
		}
		else {
			result_16043 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI138);
		}
		

	return result_16043;

}

function unhandledException(e_16105) {
		var buf_16106 = [[]];
		if (!(((e_16105.message != null ? e_16105.message.length : 0) == 0))) {
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_16106[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(e_16105.message); } else { buf_16106[0] = e_16105.message.slice(); };
		}
		else {
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_16106[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(makeNimstrLit(" [")); } else { buf_16106[0] = makeNimstrLit(" ["); };
		add_13838(buf_16106, 0, e_16105.name);
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(makeNimstrLit("]\x0A")); } else { buf_16106[0] = makeNimstrLit("]\x0A"); };
		if (buf_16106[0] != null) { buf_16106[0] = (buf_16106[0]).concat(raw_write_stack_trace_16041()); } else { buf_16106[0] = raw_write_stack_trace_16041().slice(); };
		var cbuf_16201 = toJSStr(buf_16106[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_16201);
  }
  else {
    throw cbuf_16201;
  }
  

	
}

function raiseOverflow() {
		var e_16464 = null;
		e_16464 = {m_type: NTI4046, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16464.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		e_16464.parent = null;
		raiseException(e_16464, "OverflowError");

	
}

function is_whitespace_146642(text_146644) {
		     return !/[^\s]/.test(text_146644);
  

	
}

function is_whitespace_146659(x_146661) {
		var Tmp1;
		var Tmp2;

	var result_146662 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 102;
		if (!(x_146661.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_146642(x_146661.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_146661.nodeName == "#comment");		}		result_146662 = Tmp1;
	framePtr = F.prev;

	return result_146662;

}

function raiseIndexError() {
		var e_16554 = null;
		e_16554 = {m_type: NTI4058, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16554.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI138);
		e_16554.parent = null;
		raiseException(e_16554, "IndexError");

	
}

function to_toc_146676(x_146678, father_146679) {
						var Tmp5;
						var Tmp6;
						var Tmp7;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_146678.nodeName == "UL")) {
		F.line = 107;
		var f_146702 = {heading: null, kids: nimCopy(null, [], NTI146694), sortId: (father_146679.kids != null ? father_146679.kids.length : 0), doSort: false};
		F.line = 108;
		var i_146704 = 0;
		L1: do {
			F.line = 109;
				L2: while (true) {
				if (!(i_146704 < x_146678.childNodes.length)) break L2;
					F.line = 110;
					var nxt_146705 = addInt(i_146704, 1);
					L3: do {
						F.line = 111;
							L4: while (true) {
							if (!((nxt_146705 < x_146678.childNodes.length) && is_whitespace_146659(x_146678.childNodes[nxt_146705]))) break L4;
								F.line = 112;
								nxt_146705 = addInt(nxt_146705, 1);
							}
					} while(false);
						if (!(nxt_146705 < x_146678.childNodes.length)) Tmp7 = false; else {							Tmp7 = (x_146678.childNodes[i_146704].nodeName == "LI");						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_146678.childNodes[i_146704].childNodes.length == 1);						}						if (!Tmp6) Tmp5 = false; else {							Tmp5 = (x_146678.childNodes[nxt_146705].nodeName == "UL");						}					if (Tmp5) {
					F.line = 115;
					var e_146737 = {heading: x_146678.childNodes[i_146704].childNodes[0], kids: nimCopy(null, [], NTI146729), sortId: (f_146702.kids != null ? f_146702.kids.length : 0), doSort: false};
					F.line = 116;
					var it_146738 = x_146678.childNodes[nxt_146705];
					L8: do {
						F.line = 117;
						var j_146748 = 0;
						F.line = 3636;
						var colontmp__147632 = 0;
						F.line = 117;
						colontmp__147632 = it_146738.childNodes.length;
						F.line = 3637;
						var i_147635 = 0;
						L9: do {
							F.line = 3638;
								L10: while (true) {
								if (!(i_147635 < colontmp__147632)) break L10;
									F.line = 3639;
									j_146748 = i_147635;
									F.line = 118;
									to_toc_146676(it_146738.childNodes[j_146748], e_146737);
									F.line = 3640;
									i_147635 = addInt(i_147635, 1);
								}
						} while(false);
					} while(false);
					F.line = 119;
					if (f_146702.kids != null) { f_146702.kids.push(e_146737); } else { f_146702.kids = [e_146737]; };
					F.line = 120;
					i_146704 = addInt(nxt_146705, 1);
					}
					else {
						F.line = 122;
						to_toc_146676(x_146678.childNodes[i_146704], f_146702);
						F.line = 123;
						i_146704 = addInt(i_146704, 1);
					}
					
				}
		} while(false);
		F.line = 124;
		if (father_146679.kids != null) { father_146679.kids.push(f_146702); } else { father_146679.kids = [f_146702]; };
		}
		else {
		if (is_whitespace_146659(x_146678)) {
		}
		else {
		if ((x_146678.nodeName == "LI")) {
		F.line = 128;
		var idx_146794 = nimCopy(null, [], NTI146793);
		L11: do {
			F.line = 129;
			var i_146804 = 0;
			F.line = 3636;
			var colontmp__147638 = 0;
			F.line = 129;
			colontmp__147638 = x_146678.childNodes.length;
			F.line = 3637;
			var i_147641 = 0;
			L12: do {
				F.line = 3638;
					L13: while (true) {
					if (!(i_147641 < colontmp__147638)) break L13;
						F.line = 3639;
						i_146804 = i_147641;
						if (!(is_whitespace_146659(x_146678.childNodes[i_146804]))) {
						F.line = 130;
						var Tmp14 = nimCopy(null, i_146804, NTI37420);
						if (idx_146794 != null) { idx_146794.push(Tmp14); } else { idx_146794 = [Tmp14]; };
						}
						
						F.line = 3640;
						i_147641 = addInt(i_147641, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_146794 != null ? idx_146794.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_146678.childNodes[idx_146794[chckIndx(1, 0, idx_146794.length+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 132;
		var e_146844 = {heading: x_146678.childNodes[idx_146794[chckIndx(0, 0, idx_146794.length+0-1)-0]], kids: nimCopy(null, [], NTI146836), sortId: (father_146679.kids != null ? father_146679.kids.length : 0), doSort: false};
		F.line = 134;
		var it_146845 = x_146678.childNodes[idx_146794[chckIndx(1, 0, idx_146794.length+0-1)-0]];
		L16: do {
			F.line = 135;
			var j_146855 = 0;
			F.line = 3636;
			var colontmp__147645 = 0;
			F.line = 135;
			colontmp__147645 = it_146845.childNodes.length;
			F.line = 3637;
			var i_147648 = 0;
			L17: do {
				F.line = 3638;
					L18: while (true) {
					if (!(i_147648 < colontmp__147645)) break L18;
						F.line = 3639;
						j_146855 = i_147648;
						F.line = 136;
						to_toc_146676(it_146845.childNodes[j_146855], e_146844);
						F.line = 3640;
						i_147648 = addInt(i_147648, 1);
					}
			} while(false);
		} while(false);
		F.line = 137;
		if (father_146679.kids != null) { father_146679.kids.push(e_146844); } else { father_146679.kids = [e_146844]; };
		}
		else {
			L19: do {
				F.line = 139;
				var i_146875 = 0;
				F.line = 3636;
				var colontmp__147651 = 0;
				F.line = 139;
				colontmp__147651 = x_146678.childNodes.length;
				F.line = 3637;
				var i_147654 = 0;
				L20: do {
					F.line = 3638;
						L21: while (true) {
						if (!(i_147654 < colontmp__147651)) break L21;
							F.line = 3639;
							i_146875 = i_147654;
							F.line = 140;
							to_toc_146676(x_146678.childNodes[i_146875], father_146679);
							F.line = 3640;
							i_147654 = addInt(i_147654, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 142;
		if (father_146679.kids != null) { father_146679.kids.push({heading: x_146678, kids: nimCopy(null, [], NTI146890), sortId: (father_146679.kids != null ? father_146679.kids.length : 0), doSort: false}); } else { father_146679.kids = [{heading: x_146678, kids: nimCopy(null, [], NTI146890), sortId: (father_146679.kids != null ? father_146679.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_146179(x_146181, heading_146182, items_146185, items_146185_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_146181 == null)) {
		F.line = 49;
		break BeforeRet;
		}
		
			if (!!((x_146181.heading == null))) Tmp1 = false; else {				Tmp1 = (x_146181.heading.textContent == heading_146182);			}		if (Tmp1) {
		L2: do {
			F.line = 51;
			var i_146224 = 0;
			F.line = 3636;
			var colontmp__147672 = 0;
			F.line = 51;
			colontmp__147672 = (x_146181.kids != null ? x_146181.kids.length : 0);
			F.line = 3637;
			var i_147675 = 0;
			L3: do {
				F.line = 3638;
					L4: while (true) {
					if (!(i_147675 < colontmp__147672)) break L4;
						F.line = 3639;
						i_146224 = i_147675;
						F.line = 52;
						if (items_146185[items_146185_Idx] != null) { items_146185[items_146185_Idx].push(x_146181.kids[chckIndx(i_146224, 0, x_146181.kids.length+0-1)-0].heading); } else { items_146185[items_146185_Idx] = [x_146181.kids[chckIndx(i_146224, 0, x_146181.kids.length+0-1)-0].heading]; };
						F.line = 3640;
						i_147675 = addInt(i_147675, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 54;
				var i_146251 = 0;
				F.line = 3636;
				var colontmp__147678 = 0;
				F.line = 54;
				colontmp__147678 = (x_146181.kids != null ? x_146181.kids.length : 0);
				F.line = 3637;
				var i_147681 = 0;
				L6: do {
					F.line = 3638;
						L7: while (true) {
						if (!(i_147681 < colontmp__147678)) break L7;
							F.line = 3639;
							i_146251 = i_147681;
							F.line = 55;
							var it_146252 = x_146181.kids[chckIndx(i_146251, 0, x_146181.kids.length+0-1)-0];
							F.line = 56;
							extract_items_146179(it_146252, heading_146182, items_146185, items_146185_Idx);
							F.line = 3640;
							i_147681 = addInt(i_147681, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_28349(tag_28351, kids_28353) {
	var result_28354 = null;

	var F={procname:"karax.tree",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 103;
		result_28354 = document.createElement(toJSStr(tag_28351));
		L1: do {
			F.line = 104;
			var k_28392 = null;
			F.line = 2265;
			var i_147703 = 0;
			L2: do {
				F.line = 2266;
					L3: while (true) {
					if (!(i_147703 < (kids_28353 != null ? kids_28353.length : 0))) break L3;
						F.line = 2267;
						k_28392 = kids_28353[chckIndx(i_147703, 0, kids_28353.length+0-1)-0];
						F.line = 105;
						result_28354.appendChild(k_28392);
						F.line = 2268;
						i_147703 = addInt(i_147703, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_28354;

}

function text_28483(s_28485) {
	var result_28486 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_28486 = document.createTextNode(s_28485);
	framePtr = F.prev;

	return result_28486;

}

function set_attr_29304(e_29306, key_29307, value_29308) {
	var F={procname:"karax.setAttr",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 273;
		e_29306.setAttribute(key_29307, value_29308);
	framePtr = F.prev;

	
}

function sys_fatal_20837(message_20843) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 2936;
		var e_20845 = null;
		F.line = 2937;
		e_20845 = {m_type: NTI4050, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		F.line = 2938;
		e_20845.message = nimCopy(null, message_20843, NTI138);
		F.line = 2939;
		raiseException(e_20845, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_20832(msg_20834) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3892;
		sys_fatal_20837(msg_20834);
	framePtr = F.prev;

	
}

function failed_assert_impl_20880(msg_20882) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3899;
		raise_assert_20832(msg_20882);
	framePtr = F.prev;

	
}

function uncovered_146982(x_146984) {
			var Tmp1;
		var Tmp2;

	var result_146985 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_146984.kids != null ? x_146984.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_146984.heading == null));			}		if (Tmp1) {
		F.line = 162;
		if (!(x_146984.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_146984;
		}
		else {
		Tmp2 = null;
		}
		
		result_146985 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 163;
		result_146985 = {heading: x_146984.heading, kids: nimCopy(null, [], NTI147018), sortId: x_146984.sortId, doSort: x_146984.doSort};
		L3: do {
			F.line = 165;
			var i_147035 = 0;
			F.line = 3636;
			var colontmp__147715 = 0;
			F.line = 165;
			colontmp__147715 = (x_146984.kids != null ? x_146984.kids.length : 0);
			F.line = 3637;
			var i_147718 = 0;
			L4: do {
				F.line = 3638;
					L5: while (true) {
					if (!(i_147718 < colontmp__147715)) break L5;
						F.line = 3639;
						i_147035 = i_147718;
						F.line = 166;
						var y_147036 = uncovered_146982(x_146984.kids[chckIndx(i_147035, 0, x_146984.kids.length+0-1)-0]);
						if (!((y_147036 == null))) {
						F.line = 167;
						if (result_146985.kids != null) { result_146985.kids.push(y_147036); } else { result_146985.kids = [y_147036]; };
						}
						
						F.line = 3640;
						i_147718 = addInt(i_147718, 1);
					}
			} while(false);
		} while(false);
		if (((result_146985.kids != null ? result_146985.kids.length : 0) == 0)) {
		F.line = 168;
		result_146985 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_146985;

}

function merge_tocs_147078(orig_147080, news_147081) {
	var result_147082 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 171;
		result_147082 = uncovered_146982(orig_147080);
		if ((result_147082 == null)) {
		F.line = 173;
		result_147082 = news_147081;
		}
		else {
			L1: do {
				F.line = 175;
				var i_147110 = 0;
				F.line = 3636;
				var colontmp__147708 = 0;
				F.line = 175;
				colontmp__147708 = (news_147081.kids != null ? news_147081.kids.length : 0);
				F.line = 3637;
				var i_147711 = 0;
				L2: do {
					F.line = 3638;
						L3: while (true) {
						if (!(i_147711 < colontmp__147708)) break L3;
							F.line = 3639;
							i_147110 = i_147711;
							F.line = 176;
							if (result_147082.kids != null) { result_147082.kids.push(news_147081.kids[chckIndx(i_147110, 0, news_147081.kids.length+0-1)-0]); } else { result_147082.kids = [news_147081.kids[chckIndx(i_147110, 0, news_147081.kids.length+0-1)-0]]; };
							F.line = 3640;
							i_147711 = addInt(i_147711, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_147082;

}

function build_toc_147134(orig_147136, types_147138, procs_147139) {
	var result_147140 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 179;
		var new_stuff_147156 = {heading: null, kids: nimCopy(null, [], NTI147155), doSort: true, sortId: 0};
		L1: do {
			F.line = 180;
			var t_147414 = null;
			F.line = 3933;
			var i_147696 = 0;
			F.line = 3934;
			var l_147698 = (types_147138 != null ? types_147138.length : 0);
			L2: do {
				F.line = 3935;
					L3: while (true) {
					if (!(i_147696 < l_147698)) break L3;
						F.line = 3936;
						t_147414 = types_147138[chckIndx(i_147696, 0, types_147138.length+0-1)-0];
						F.line = 181;
						var c_147430 = {heading: t_147414.cloneNode(true), kids: nimCopy(null, [], NTI147429), doSort: true, sortId: 0};
						F.line = 182;
						t_147414.__karaxMarker__ = true;
						L4: do {
							F.line = 183;
							var p_147439 = null;
							F.line = 3933;
							var i_147691 = 0;
							F.line = 3934;
							var l_147693 = (procs_147139 != null ? procs_147139.length : 0);
							L5: do {
								F.line = 3935;
									L6: while (true) {
									if (!(i_147691 < l_147693)) break L6;
										F.line = 3936;
										p_147439 = procs_147139[chckIndx(i_147691, 0, procs_147139.length+0-1)-0];
										if (!(p_147439.hasOwnProperty('__karaxMarker__'))) {
										F.line = 185;
										var xx_147440 = p_147439.parentNode.getElementsByClassName("attachedType");
										if ((((xx_147440 != null ? xx_147440.length : 0) == 1) && (xx_147440[chckIndx(0, 0, xx_147440.length+0-1)-0].textContent == t_147414.textContent))) {
										F.line = 188;
										var q_147450 = tree_28349(makeNimstrLit("A"), [text_28483(p_147439.title)]);
										F.line = 189;
										set_attr_29304(q_147450, "href", p_147439.getAttribute("href"));
										F.line = 190;
										if (c_147430.kids != null) { c_147430.kids.push({heading: q_147450, kids: nimCopy(null, [], NTI147465), sortId: 0, doSort: false}); } else { c_147430.kids = [{heading: q_147450, kids: nimCopy(null, [], NTI147465), sortId: 0, doSort: false}]; };
										F.line = 191;
										p_147439.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 3937;
										i_147691 = addInt(i_147691, 1);
										if (!(((procs_147139 != null ? procs_147139.length : 0) == l_147693))) {
										F.line = 3938;
										failed_assert_impl_20880(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3938, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 192;
						if (new_stuff_147156.kids != null) { new_stuff_147156.kids.push(c_147430); } else { new_stuff_147156.kids = [c_147430]; };
						F.line = 3937;
						i_147696 = addInt(i_147696, 1);
						if (!(((types_147138 != null ? types_147138.length : 0) == l_147698))) {
						F.line = 3938;
						failed_assert_impl_20880(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3938, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 193;
		result_147140 = merge_tocs_147078(orig_147136, new_stuff_147156);
	framePtr = F.prev;

	return result_147140;

}

function add_28500(parent_28502, kid_28503) {
			var Tmp1;
				var Tmp2;

	var F={procname:"karax.add",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
			if (!(parent_28502.nodeName == "TR")) Tmp1 = false; else {				if ((kid_28503.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_28503.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 117;
		var k_28504 = document.createElement("TD");
		F.line = 118;
		k_28504.appendChild(kid_28503);
		F.line = 119;
		parent_28502.appendChild(k_28504);
		}
		else {
			F.line = 121;
		parent_28502.appendChild(kid_28503);
		}
		
	framePtr = F.prev;

	
}

function set_class_29287(e_29289, value_29290) {
	var F={procname:"karax.setClass",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 270;
		e_29289.setAttribute("class", toJSStr(value_29290));
	framePtr = F.prev;

	
}

function to_html_146266(x_146268, is_root_146269) {
			var Tmp1;

		function HEX3Aanonymous_146320(a_146322, b_146323) {
					var Tmp1;

			var result_146324 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_146322.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_146323.heading == null));					}				if (Tmp1) {
				F.line = 74;
				var x_146347 = a_146322.heading.textContent;
				F.line = 75;
				var y_146348 = b_146323.heading.textContent;
				if ((x_146347 < y_146348)) {
				F.line = 76;
				result_146324 = -1;
				break BeforeRet;
				}
				
				if ((y_146348 < x_146347)) {
				F.line = 77;
				result_146324 = 1;
				break BeforeRet;
				}
				
				F.line = 78;
				result_146324 = 0;
				break BeforeRet;
				}
				else {
					F.line = 81;
					result_146324 = subInt(a_146322.sortId, b_146323.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_146324;

		}

	var result_146270 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_146268 == null)) {
		F.line = 59;
		result_146270 = null;
		break BeforeRet;
		}
		
		if (((x_146268.kids != null ? x_146268.kids.length : 0) == 0)) {
		if ((x_146268.heading == null)) {
		F.line = 61;
		result_146270 = null;
		break BeforeRet;
		}
		
		F.line = 62;
		result_146270 = x_146268.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 63;
		result_146270 = tree_28349(makeNimstrLit("DIV"), []);
			if (!!((x_146268.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_146268.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 65;
		add_28500(result_146270, x_146268.heading.cloneNode(true));
		}
		
		F.line = 66;
		var ul_146317 = tree_28349(makeNimstrLit("UL"), []);
		if (is_root_146269) {
		F.line = 68;
		set_class_29287(ul_146317, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 70;
		set_class_29287(ul_146317, makeNimstrLit("simple"));
		}
		
		if (x_146268.doSort) {
		F.line = 72;
		x_146268.kids.sort(HEX3Aanonymous_146320);
		}
		
		L2: do {
			F.line = 83;
			var k_146614 = null;
			F.line = 3931;
			var colontmp__147723 = null;
			F.line = 83;
			colontmp__147723 = x_146268.kids;
			F.line = 3933;
			var i_147727 = 0;
			F.line = 3934;
			var l_147729 = (colontmp__147723 != null ? colontmp__147723.length : 0);
			L3: do {
				F.line = 3935;
					L4: while (true) {
					if (!(i_147727 < l_147729)) break L4;
						F.line = 3936;
						k_146614 = colontmp__147723[chckIndx(i_147727, 0, colontmp__147723.length+0-1)-0];
						F.line = 84;
						var y_146615 = to_html_146266(k_146614, false);
						if (!((y_146615 == null))) {
						F.line = 86;
						add_28500(ul_146317, tree_28349(makeNimstrLit("LI"), [y_146615]));
						}
						
						F.line = 3937;
						i_147727 = addInt(i_147727, 1);
						if (!(((colontmp__147723 != null ? colontmp__147723.length : 0) == l_147729))) {
						F.line = 3938;
						failed_assert_impl_20880(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3938, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_146317.childNodes.length == 0))) {
		F.line = 87;
		add_28500(result_146270, ul_146317);
		}
		
		if ((result_146270.childNodes.length == 0)) {
		F.line = 88;
		result_146270 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_146270;

}

function replace_by_id_28161(id_28163, new_tree_28164) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 54;
		var x_28165 = document.getElementById(id_28163);
		F.line = 55;
		x_28165.parentNode.replaceChild(new_tree_28164, x_28165);
		F.line = 56;
		new_tree_28164.id = id_28163;
	framePtr = F.prev;

	
}

function togglevis_147513(d_147515) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 198;
		    if (d_147515.style.display == 'none')
      d_147515.style.display = 'inline';
    else
      d_147515.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_147531) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 206;
		var toc_147532 = document.getElementById("toc-list");
		if ((alternative_147499[0] === null)) {
		F.line = 208;
		var tt_147555 = {heading: null, kids: nimCopy(null, [], NTI147554), sortId: 0, doSort: false};
		F.line = 209;
		to_toc_146676(toc_147532, tt_147555);
		F.line = 210;
		tt_147555 = tt_147555.kids[chckIndx(0, 0, tt_147555.kids.length+0-1)-0];
		F.line = 212;
		var types_147572 = [nimCopy(null, [], NTI147571)];
		F.line = 213;
		var procs_147589 = [nimCopy(null, [], NTI147588)];
		F.line = 215;
		extract_items_146179(tt_147555, "Types", types_147572, 0);
		F.line = 216;
		extract_items_146179(tt_147555, "Procs", procs_147589, 0);
		F.line = 217;
		extract_items_146179(tt_147555, "Converters", procs_147589, 0);
		F.line = 218;
		extract_items_146179(tt_147555, "Methods", procs_147589, 0);
		F.line = 219;
		extract_items_146179(tt_147555, "Templates", procs_147589, 0);
		F.line = 220;
		extract_items_146179(tt_147555, "Macros", procs_147589, 0);
		F.line = 221;
		extract_items_146179(tt_147555, "Iterators", procs_147589, 0);
		F.line = 223;
		var ntoc_147597 = build_toc_147134(tt_147555, types_147572[0], procs_147589[0]);
		F.line = 224;
		var x_147598 = to_html_146266(ntoc_147597, true);
		F.line = 225;
		alternative_147499[0] = tree_28349(makeNimstrLit("DIV"), [x_147598]);
		}
		
		if ((value_147531 == "type")) {
		F.line = 227;
		replace_by_id_28161("tocRoot", alternative_147499[0]);
		}
		else {
			F.line = 229;
		replace_by_id_28161("tocRoot", tree_28349(makeNimstrLit("DIV"), []));
		}
		
		F.line = 230;
		togglevis_147513(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_147731 = [null];
var contents_147733 = [null];
var oldtoc_147943 = [null];
var timer_147944 = [null];

function raiseRangeError() {
		var e_16524 = null;
		e_16524 = {m_type: NTI4062, parent: null, name: null, message: null, trace: null, raise_id: 0, up: null};
		e_16524.message = nimCopy(null, makeNimstrLit("value out of range"), NTI138);
		e_16524.parent = null;
		raiseException(e_16524, "RangeError");

	
}

function nsuToLowerAsciiChar(c_127177) {
	var result_127178 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_127177] != undefined)) {
		F.line = 265;
		result_127178 = chckRange(addInt(c_127177, 32), 0, 255);
		}
		else {
			F.line = 267;
			result_127178 = c_127177;
		}
		
	framePtr = F.prev;

	return result_127178;

}

function fuzzy_match_145044(pattern_145046, str_145047) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_145051 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_145052 = -100;
		F.line = 38;
		var header_matched_145053 = false;
		F.line = 39;
		var unmatched_leading_char_count_145055 = 0;
		F.line = 40;
		var consecutive_match_count_145057 = 0;
		F.line = 41;
		var str_index_145059 = 0;
		F.line = 42;
		var pat_index_145061 = 0;
		F.line = 43;
		var score_145063 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_145059 < (str_145047 != null ? str_145047.length : 0)) && (pat_index_145061 < (pattern_145046 != null ? pattern_145046.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_145070 = nsuToLowerAsciiChar(pattern_145046.charCodeAt(chckIndx(pat_index_145061, 0, pattern_145046.length+0-1)-0));
						F.line = 52;
						var str_char_145071 = nsuToLowerAsciiChar(str_145047.charCodeAt(chckIndx(str_index_145059, 0, str_145047.length+0-1)-0));
						if ((ConstSet3[pattern_char_145070] != undefined)) {
						F.line = 56;
						pat_index_145061 = addInt(pat_index_145061, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_145071] != undefined)) {
						F.line = 59;
						str_index_145059 = addInt(str_index_145059, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_145053) && (str_char_145071 == 58))) {
						F.line = 65;
						header_matched_145053 = true;
						F.line = 66;
						score_state_145052 = -100;
						F.line = 67;
						score_145063 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_145063)));
						F.line = 68;
						pat_index_145061 = 0;
						F.line = 69;
						str_index_145059 = addInt(str_index_145059, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_145071 == pattern_char_145070)) {
						F.line = 73;
						switch (score_state_145052) {
						case -100:
						case 20:
							F.line = 75;
							score_state_145052 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_145052 = 5;
							F.line = 78;
							score_145063 = addInt(score_145063, score_state_145052);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_145057 = addInt(consecutive_match_count_145057, 1);
							F.line = 82;
							score_state_145052 = 5;
							F.line = 83;
							score_145063 = addInt(score_145063, mulInt(5, consecutive_match_count_145057));
							if ((score_state_145052 == 10)) {
							F.line = 86;
							score_145063 = addInt(score_145063, 10);
							}
							
							F.line = 88;
							var on_boundary_145182 = (pat_index_145061 == (pattern_145046 != null ? (pattern_145046.length-1) : -1));
							if ((!(on_boundary_145182) && (str_index_145059 < (str_145047 != null ? (str_145047.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_145183 = nsuToLowerAsciiChar(pattern_145046.charCodeAt(chckIndx(addInt(pat_index_145061, 1), 0, pattern_145046.length+0-1)-0));
							F.line = 92;
							var next_str_char_145184 = nsuToLowerAsciiChar(str_145047.charCodeAt(chckIndx(addInt(str_index_145059, 1), 0, str_145047.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_145184] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_145184 == next_pattern_char_145183));							}							on_boundary_145182 = Tmp4;
							}
							
							if (on_boundary_145182) {
							F.line = 100;
							score_state_145052 = 20;
							F.line = 100;
							score_145063 = addInt(score_145063, score_state_145052);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_145047.charCodeAt(chckIndx(subInt(str_index_145059, 1), 0, str_145047.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_145047.charCodeAt(chckIndx(subInt(str_index_145059, 1), 0, str_145047.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_145047.charCodeAt(chckIndx(str_index_145059, 0, str_145047.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_145239 = Tmp5;
							if (is_leading_char_145239) {
							F.line = 110;
							score_state_145052 = 10;
							}
							else {
								F.line = 114;
								score_state_145052 = 0;
								F.line = 114;
								score_145063 = addInt(score_145063, score_state_145052);
							}
							
							break;
						}
						F.line = 115;
						pat_index_145061 = addInt(pat_index_145061, 1);
						}
						else {
							F.line = 118;
							switch (score_state_145052) {
							case -100:
								F.line = 120;
								score_state_145052 = -3;
								F.line = 120;
								score_145063 = addInt(score_145063, score_state_145052);
								break;
							case 5:
								F.line = 123;
								score_state_145052 = -1;
								F.line = 123;
								score_145063 = addInt(score_145063, score_state_145052);
								F.line = 124;
								consecutive_match_count_145057 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_145055 < 3)) {
								F.line = 128;
								score_state_145052 = -3;
								F.line = 128;
								score_145063 = addInt(score_145063, score_state_145052);
								}
								
								F.line = 129;
								unmatched_leading_char_count_145055 = addInt(unmatched_leading_char_count_145055, 1);
								break;
							default: 
								F.line = 132;
								score_state_145052 = -1;
								F.line = 132;
								score_145063 = addInt(score_145063, score_state_145052);
								break;
							}
						}
						
						F.line = 134;
						str_index_145059 = addInt(str_index_145059, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_145051, {Field0: nimMax(0, score_145063), Field1: (0 < score_145063)}, NTI145048);
	framePtr = F.prev;

	return result_145051;

}

function text_28466(s_28468) {
	var result_28469 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 112;
		result_28469 = document.createTextNode(toJSStr(s_28468));
	framePtr = F.prev;

	return result_28469;

}

function dosearch_147751(value_147753) {

		function HEX3Aanonymous_147855(a_147865, b_147867) {
			var result_147873 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 274;
				result_147873 = subInt(b_147867["Field1"], a_147865["Field1"]);
			framePtr = F.prev;

			return result_147873;

		}

	var result_147754 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_147731[0] != null ? db_147731[0].length : 0) == 0)) {
		F.line = 240;
		var stuff_147762 = null;
		F.line = 241;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_147762 = doc.documentElement;
    
		F.line = 254;
		db_147731[0] = nimCopy(null, stuff_147762.getElementsByClassName("reference"), NTI28057);
		F.line = 255;
		contents_147733[0] = nimCopy(null, [], NTI147777);
		L1: do {
			F.line = 256;
			var ahref_147786 = null;
			F.line = 3933;
			var i_148020 = 0;
			F.line = 3934;
			var l_148022 = (db_147731[0] != null ? db_147731[0].length : 0);
			L2: do {
				F.line = 3935;
					L3: while (true) {
					if (!(i_148020 < l_148022)) break L3;
						F.line = 3936;
						ahref_147786 = db_147731[0][chckIndx(i_148020, 0, db_147731[0].length+0-1)-0];
						F.line = 257;
						if (contents_147733[0] != null) { contents_147733[0].push(ahref_147786.getAttribute("data-doc-search-tag")); } else { contents_147733[0] = [ahref_147786.getAttribute("data-doc-search-tag")]; };
						F.line = 3937;
						i_148020 = addInt(i_148020, 1);
						if (!(((db_147731[0] != null ? db_147731[0].length : 0) == l_148022))) {
						F.line = 3938;
						failed_assert_impl_20880(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(3938, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 258;
		var ul_147800 = tree_28349(makeNimstrLit("UL"), []);
		F.line = 259;
		result_147754 = tree_28349(makeNimstrLit("DIV"), []);
		F.line = 260;
		set_class_29287(result_147754, makeNimstrLit("search_results"));
		F.line = 261;
		var matches_147821 = nimCopy(null, [], NTI147820);
		L4: do {
			F.line = 262;
			var i_147838 = 0;
			F.line = 3636;
			var colontmp__148027 = 0;
			F.line = 262;
			colontmp__148027 = (db_147731[0] != null ? db_147731[0].length : 0);
			F.line = 3637;
			var i_148030 = 0;
			L5: do {
				F.line = 3638;
					L6: while (true) {
					if (!(i_148030 < colontmp__148027)) break L6;
						F.line = 3639;
						i_147838 = i_148030;
						L7: do {
							F.line = 263;
							var c_147839 = contents_147733[0][chckIndx(i_147838, 0, contents_147733[0].length+0-1)-0];
							if (((c_147839 == "Examples") || (c_147839 == "PEG construction"))) {
							F.line = 268;
							break L7;
							}
							
							F.line = 269;
							var colontmp__148038 = {Field0: 0, Field1: false};
							F.line = 269;
							var score_147840 = 0;
							F.line = 269;
							var matched_147841 = false;
							F.line = 269;
							nimCopy(colontmp__148038, fuzzy_match_145044(value_147753, c_147839), NTI145048);
							F.line = 269;
							score_147840 = colontmp__148038["Field0"];
							F.line = 269;
							matched_147841 = colontmp__148038["Field1"];
							if (matched_147841) {
							F.line = 271;
							if (matches_147821 != null) { matches_147821.push({Field0: db_147731[0][chckIndx(i_147838, 0, db_147731[0].length+0-1)-0], Field1: score_147840}); } else { matches_147821 = [{Field0: db_147731[0][chckIndx(i_147838, 0, db_147731[0].length+0-1)-0], Field1: score_147840}]; };
							}
							
						} while(false);
						F.line = 3640;
						i_148030 = addInt(i_148030, 1);
					}
			} while(false);
		} while(false);
		F.line = 273;
		matches_147821.sort(HEX3Aanonymous_147855);
		L8: do {
			F.line = 275;
			var i_147923 = 0;
			F.line = 3636;
			var colontmp__148033 = 0;
			F.line = 275;
			colontmp__148033 = nimMin((matches_147821 != null ? matches_147821.length : 0), 19);
			F.line = 3637;
			var i_148036 = 0;
			L9: do {
				F.line = 3638;
					L10: while (true) {
					if (!(i_148036 < colontmp__148033)) break L10;
						F.line = 3639;
						i_147923 = i_148036;
						F.line = 276;
						matches_147821[chckIndx(i_147923, 0, matches_147821.length+0-1)-0]["Field0"].innerHTML = matches_147821[chckIndx(i_147923, 0, matches_147821.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 277;
						add_28500(ul_147800, tree_28349(makeNimstrLit("LI"), [matches_147821[chckIndx(i_147923, 0, matches_147821.length+0-1)-0]["Field0"]]));
						F.line = 3640;
						i_148036 = addInt(i_148036, 1);
					}
			} while(false);
		} while(false);
		if ((ul_147800.childNodes.length == 0)) {
		F.line = 279;
		add_28500(result_147754, tree_28349(makeNimstrLit("B"), [text_28466(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 281;
			add_28500(result_147754, tree_28349(makeNimstrLit("B"), [text_28466(makeNimstrLit("search results"))]));
			F.line = 282;
			add_28500(result_147754, ul_147800);
		}
		
	framePtr = F.prev;

	return result_147754;

}

function search() {

		function wrapper_147960() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 289;
				var elem_147962 = document.getElementById("searchInput");
				F.line = 290;
				var value_147963 = elem_147962.value;
				if (!(((value_147963 != null ? value_147963.length : 0) == 0))) {
				if ((oldtoc_147943[0] === null)) {
				F.line = 293;
				oldtoc_147943[0] = document.getElementById("tocRoot");
				}
				
				F.line = 294;
				var results_147971 = dosearch_147751(value_147963);
				F.line = 295;
				replace_by_id_28161("tocRoot", results_147971);
				}
				else {
				if (!((oldtoc_147943[0] === null))) {
				F.line = 297;
				replace_by_id_28161("tocRoot", oldtoc_147943[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_147944[0] == null))) {
		F.line = 299;
		clearTimeout(timer_147944[0]);
		}
		
		F.line = 300;
		timer_147944[0] = setTimeout(wrapper_147960, 400);
	framePtr = F.prev;

	
}
